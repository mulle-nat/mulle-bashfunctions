#! /usr/bin/env mulle-bash
#! MULLE_BASHFUNCTIONS_VERSION=<|MULLE_BASHFUNCTIONS_VERSION|>
# shellcheck shell=bash
#
<|HEADER|>


[ "${TRACE}" = 'YES' -o "${<|ONESHOT_UPCASE_IDENTIFIER|>_TRACE}" = 'YES' ] \
&& set -x  \
&& : "$0" "$@"

### Inject code for standalone script with \`mulle-bashfunctions embed\`
### >> START OF mulle-boot.sh >>
### << END OF mulle-boot.sh <<

#
# Versioning of this script
#
MULLE_EXECUTABLE_VERSION="0.0.0"


### Inject code for standalone script with \`mulle-bashfunctions embed\`
### >> START OF mulle-bashfunctions-embed.sh >>
### << END OF mulle-bashfunctions-embed.sh <<

<|ONESHOT_PREFIXLESS_DOWNCASE_IDENTIFIER|>::print_flags()
{
   echo "   -f    : force operation"

   ##
   ## ADD YOUR FLAGS DESCRIPTIONS HERE
   ##

   options_technical_flags_usage \
                "         : "
}


<|ONESHOT_PREFIXLESS_DOWNCASE_IDENTIFIER|>::usage()
{
   [ $# -ne 0 ] && log_error "$*"


   cat <<EOF >&2
Usage:
   <|ONESHOT_NAME|> [flags]

   ##
   ## ADD YOUR USAGE DESCRIPTION HERE
   ##

Flags:
EOF
   <|ONESHOT_PREFIXLESS_DOWNCASE_IDENTIFIER|>::print_flags | LC_ALL=C sort >&2

   exit 1
}


<|ONESHOT_PREFIXLESS_DOWNCASE_IDENTIFIER|>::main()
{
   #
   # simple option/flag handling
   #
   local OPTION_VALUE

   while [ $# -ne 0 ]
   do
      if options_technical_flags "$1"
      then
         shift
         continue
      fi

      case "$1" in
         -f|--force)
            MULLE_FLAG_MAGNUM_FORCE='YES'
         ;;

         -h*|--help|help)
            <|ONESHOT_PREFIXLESS_DOWNCASE_IDENTIFIER|>::usage
         ;;

         --value)
            [ $# -eq 1 ] && <|ONESHOT_PREFIXLESS_DOWNCASE_IDENTIFIER|>::usage "missing argument to $1"
            shift

            OPTION_VALUE="$1"
         ;;

         --version)
            printf "%s\n" "${MULLE_EXECUTABLE_VERSION}"
            exit 0
         ;;


         ##
         ## ADD YOUR FLAGS HERE
         ##

         -*)
            <|ONESHOT_PREFIXLESS_DOWNCASE_IDENTIFIER|>::usage "Unknown flag \"$1\""
         ;;

         *)
            break
         ;;
      esac

      shift
   done

   options_setup_trace "${MULLE_TRACE}" && set -x

   ##
   ## ADD YOUR CODE HERE
   ##
   log_info "Does nothing, but will soon"
}

#
# You can also use the function `call_with_flags`, which has been defined
# during mulle-boot. It lets you call '<|ONESHOT_PREFIXLESS_DOWNCASE_IDENTIFIER|>::main'
# with <|ONESHOT_UPCASE_IDENTIFIER|>_FLAGS interposed.
#
# call_with_flags "<|ONESHOT_PREFIXLESS_DOWNCASE_IDENTIFIER|>::main" "${<|ONESHOT_UPCASE_IDENTIFIER|>_FLAGS}" "$@"

<|ONESHOT_PREFIXLESS_DOWNCASE_IDENTIFIER|>::main "$@"

<|FOOTER|>
