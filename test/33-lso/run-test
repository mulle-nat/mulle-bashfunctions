#! /bin/sh

[ "${TRACE}" = 'YES' ] && set -x && : "$0" "$@"

###   ###   ###   ###   ###   ###   ###   ###   ###   ###   ###   ###   ###
MULLE_BASHFUNCTIONS_LIBEXEC_DIR="${MULLE_BASHFUNCTIONS_LIBEXEC_DIR:-`mulle-bashfunctions libexec-dir`}" || exit 1

. "${MULLE_BASHFUNCTIONS_LIBEXEC_DIR}/mulle-boot.sh"          || exit 1
. "${MULLE_BASHFUNCTIONS_LIBEXEC_DIR}/mulle-bashglobal.sh"    || exit 1
. "${MULLE_BASHFUNCTIONS_LIBEXEC_DIR}/mulle-compatibility.sh" || exit 1
. "${MULLE_BASHFUNCTIONS_LIBEXEC_DIR}/mulle-logging.sh"       || exit 1
. "${MULLE_BASHFUNCTIONS_LIBEXEC_DIR}/mulle-options.sh"       || exit 1
. "${MULLE_BASHFUNCTIONS_LIBEXEC_DIR}/mulle-string.sh"        || exit 1
. "${MULLE_BASHFUNCTIONS_LIBEXEC_DIR}/mulle-path.sh"          || exit 1
. "${MULLE_BASHFUNCTIONS_LIBEXEC_DIR}/mulle-exekutor.sh"      || exit 1
. "${MULLE_BASHFUNCTIONS_LIBEXEC_DIR}/mulle-file.sh"          || exit 1
###   ###   ###   ###   ###   ###   ###   ###   ###   ###   ###   ###   ###




main()
{
   _options_mini_main "$@" && set -x

   chmod 606 file
   perm="`lso "file" `"
   case "${MULLE_UNAME}" in
      'mingw'|'msys')
         if [ "${perm}" != "644" ]
         then
            _internal_fail "fail with ${perm}"
         fi
      ;;

      *)
         if [ "${perm}" != "606" ]
         then
            _internal_fail "fail with ${perm}"
         fi
      ;;
   esac

   # TODO: memo, not sure why "exe" refuses to be chmoded
   #       on mingw, but run-test has those permission when copied with
   #       rsync
   perm="`lso "run-test" `"
   if [ "${perm}" != "755" ]
   then
      _internal_fail "fail with ${perm}"
   fi

   log_info "----- ALL PASSED -----"
}


main "$@"

