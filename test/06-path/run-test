#! /usr/bin/env bash

[ "${TRACE}" = 'YES' ] && set -x

if [ ! -z "${ZSH_VERSION}" ]
then
   setopt sh_word_split
fi

_test_function()
{
   local tfunction="$1"; shift

   local filepath="$1"
   local expected="$2"

   local absolute

   absolute="`${tfunction} "${filepath}"`"
   if [ "${absolute}" != "${expected}" ]
   then
      printf "%s\n" "${tfunction} \"${filepath}\" -> \"${absolute}\". Expected: \"${expected}\"" >&2
      exit 1
   fi
}


absolutepath()
{
   r_absolutepath "$@"

   [ ! -z "${RVAL}" ] && printf "%s\n" "${RVAL}"
}


_test_absolutepath()
{
   _test_function "absolutepath" "$@"
}


# symlink helper
#
# this cds into a physical directory, so that .. is relative to it
# e.g. cd a/b/c might  end up being a/c, so .. is 'a'
# if you just go a/b/c then .. is b
#
cd_physical()
{
   cd "$1" || fail "cd_physical: \"$1\" is not reachable from \"${PWD}\""
   cd "`pwd -P`" # resolve symlinks and go there (changes PWD)
}


test_absolutepath()
{
   (
      cd_physical "${PWD}" &&
      _test_absolutepath "a" "${PWD}/a" &&
      _test_absolutepath "/a" "/a" &&
      _test_absolutepath "~a" "~a" &&
      _test_absolutepath "~/a" "~/a" &&
      _test_absolutepath "." "${PWD}/."  &&
      _test_absolutepath ".." "${PWD}/.." &&
      _test_absolutepath "./x" "${PWD}/./x" &&
      _test_absolutepath "../x" "${PWD}/../x"
   )
}

simplified_absolutepath()
{
   r_simplified_absolutepath "$@"

   [ ! -z "${RVAL}" ] && printf "%s\n" "${RVAL}"
}

_test_simplified_absolutepath()
{
   _test_function "simplified_absolutepath" "$@"
}


test_simplified_absolutepath()
{
   (
      cd_physical "${PWD}" &&
      _test_simplified_absolutepath "a" "${PWD}/a" &&
      _test_simplified_absolutepath "/a" "/a" &&
      _test_simplified_absolutepath "~a" "~a" &&
      _test_simplified_absolutepath "~/a" "~/a" &&
      _test_simplified_absolutepath "." "${PWD}"  &&
      _test_simplified_absolutepath ".." "`dirname -- "${PWD}"`" &&
      _test_simplified_absolutepath "./x" "${PWD}/x" &&
      _test_simplified_absolutepath "../x" "`dirname -- "${PWD}"`/x"
   )
}


main()
{
   test_absolutepath || exit 1
   test_simplified_absolutepath || exit 1
   echo "All tests passed" >&2
}


init()
{
   MULLE_BASHFUNCTIONS_LIBEXEC_DIR="${MULLE_BASHFUNCTIONS_LIBEXEC_DIR:-../../src}"

   . "${MULLE_BASHFUNCTIONS_LIBEXEC_DIR}/mulle-compatibility.sh" || exit 1
   . "${MULLE_BASHFUNCTIONS_LIBEXEC_DIR}/mulle-string.sh" || exit 1
   . "${MULLE_BASHFUNCTIONS_LIBEXEC_DIR}/mulle-path.sh" || exit 1
}


init "$@"
main "$@"

