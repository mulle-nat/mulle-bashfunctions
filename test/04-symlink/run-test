#! /bin/sh

[ "${TRACE}" = 'YES' ] && set -x && : "$0" "$@"

###   ###   ###   ###   ###   ###   ###   ###   ###   ###   ###   ###   ###
MULLE_BASHFUNCTIONS_LIBEXEC_DIR="`mulle-bashfunctions libexec-dir`" || exit 1
export MULLE_BASHFUNCTIONS_LIBEXEC_DIR
. "${MULLE_BASHFUNCTIONS_LIBEXEC_DIR}/mulle-boot.sh" || exit 1
. "${MULLE_BASHFUNCTIONS_LIBEXEC_DIR}/mulle-bashfunctions.sh" || exit 1
###   ###   ###   ###   ###   ###   ###   ###   ###   ###   ###   ###   ###

if [ ${ZSH_VERSION+x} ]
then
   setopt sh_word_split
fi


run_test_1()
{
   local result

   SED="`command -v sed`"

   log_fluff "${SED} relative"
   create_symlink "${SED}" "deep/bin/sed1" 'NO'
   log_fluff "`readlink deep/bin/sed1`"

   result="`echo "x" | ./deep/bin/sed1 's/x/y/g'`" || exit 1
   [ "${result}" = "y" ] || exit 1

   log_fluff "${SED} absolute"
   create_symlink "${SED}" "deep/bin/sed2" 'YES'
   log_fluff "`readlink deep/bin/sed2`"

   result="`echo "x" | ./deep/bin/sed2 's/x/y/g'`" || exit 1
   [ "${result}" = "y" ] || exit 1

   r_symlink_relpath "${SED}" "$PWD"
   linkpath="${RVAL}"

   log_fluff "${linkpath} absolute"
   create_symlink "${linkpath}" "deep/bin/sed3" 'NO'
   log_fluff "`readlink deep/bin/sed3`"

   result="`echo "x" | ./deep/bin/sed3 's/x/y/g'`" || exit 1
   [ "${result}" = "y" ] || exit 1

   log_fluff "${linkpath} relative"
   create_symlink "${linkpath}" "deep/bin/sed4" 'YES'
   log_fluff "`readlink deep/bin/sed4`"

   result="`echo "x" | ./deep/bin/sed4 's/x/y/g'`" || exit 1
   [ "${result}" = "y" ] || exit 1
}

main()
{
   _options_mini_main "$@" && set -x

   rm -rf deep 2> /dev/null

   run_test_1

   rm -rf deep 2> /dev/null

   log_info "----- ALL PASSED -----"
}


main "$@"
