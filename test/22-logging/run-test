#! /bin/sh

[ "${TRACE}" = 'YES' ] && set -x && : "$0" "$@"

###   ###   ###   ###   ###   ###   ###   ###   ###   ###   ###   ###   ###
MULLE_BASHFUNCTIONS_LIBEXEC_DIR="`mulle-bashfunctions-env libexec-dir`" || exit 1
export MULLE_BASHFUNCTIONS_LIBEXEC_DIR
. "${MULLE_BASHFUNCTIONS_LIBEXEC_DIR}/mulle-boot.sh" || exit 1
. "${MULLE_BASHFUNCTIONS_LIBEXEC_DIR}/mulle-bashfunctions.sh" || exit 1
###   ###   ###   ###   ###   ###   ###   ###   ###   ###   ###   ###   ###

if [ ! -z "${ZSH_VERSION}" ]
then
   setopt sh_word_split
fi



expect_output()
{
   local output="$1"
   local expected="$2"

   if [ "${output}" != "${expected}" ]
   then
      echo "Got \"${output}\". Expected: \"${expected}\"" >&2
      stacktrace >&2
      exit 1
   fi
}



test_tee()
{
   MULLE_EXECUTABLE_PID=$$

   logfile="${PWD}/a.txt"
   teefile="${PWD}/b.txt"

   [ -f "${logfile}" ] && exekutor rm -f "${logfile}"
   [ -f "${teefile}" ] && exekutor rm -f "${teefile}"

   logging_tee_eval_exekutor "${logfile}" "${teefile}" echo 1
   logging_tee_eval_exekutor "${logfile}" "${teefile}" echo 2

   local expect 

   expect="==> echo 1
1
==> echo 2
2"

   expect_output "`rexekutor cat "${logfile}" `" "${expect}"

   expect_output "`rexekutor cat "${teefile}" `" "${expect}"

   exekutor rm "${logfile}"
   exekutor rm "${teefile}"
}


main()
{
   test_tee

   echo "All tests passed" >&2
}


init()
{
   MULLE_BASHFUNCTIONS_LIBEXEC_DIR="${MULLE_BASHFUNCTIONS_LIBEXEC_DIR:-../../src}"

   . "${MULLE_BASHFUNCTIONS_LIBEXEC_DIR}/mulle-bashfunctions.sh" || exit 1
}


init 
main "$@"

