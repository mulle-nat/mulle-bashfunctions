#! /bin/sh

[ "${TRACE}" = 'YES' ] && set -x && : "$0" "$@"

###   ###   ###   ###   ###   ###   ###   ###   ###   ###   ###   ###   ###
MULLE_BASHFUNCTIONS_LIBEXEC_DIR="${MULLE_BASHFUNCTIONS_LIBEXEC_DIR:-`mulle-bashfunctions libexec-dir`}" || exit 1

. "${MULLE_BASHFUNCTIONS_LIBEXEC_DIR}/mulle-boot.sh"          || exit 1
. "${MULLE_BASHFUNCTIONS_LIBEXEC_DIR}/mulle-bashglobal.sh"    || exit 1
. "${MULLE_BASHFUNCTIONS_LIBEXEC_DIR}/mulle-compatibility.sh" || exit 1
. "${MULLE_BASHFUNCTIONS_LIBEXEC_DIR}/mulle-logging.sh"       || exit 1
. "${MULLE_BASHFUNCTIONS_LIBEXEC_DIR}/mulle-options.sh"       || exit 1
. "${MULLE_BASHFUNCTIONS_LIBEXEC_DIR}/mulle-string.sh"        || exit 1
. "${MULLE_BASHFUNCTIONS_LIBEXEC_DIR}/mulle-path.sh"          || exit 1
. "${MULLE_BASHFUNCTIONS_LIBEXEC_DIR}/mulle-exekutor.sh"      || exit 1
. "${MULLE_BASHFUNCTIONS_LIBEXEC_DIR}/mulle-file.sh"          || exit 1
. "${MULLE_BASHFUNCTIONS_LIBEXEC_DIR}/mulle-url.sh"           || exit 1
###   ###   ###   ###   ###   ###   ###   ###   ###   ###   ###   ###   ###

if [ ${ZSH_VERSION+x} ]
then
   setopt sh_word_split
fi



expect()
{
   local var="$1"
   local output="$2"
   local expected="$3"

   if [ "${output}" != "${expected}" ]
   then
      echo "Got \"${output}\" for ${var}. Expected: \"${expected}\"" >&2
      stacktrace >&2
      exit 1
   fi
}


test_url1()
{
   local _scheme
   local _userinfo
   local _host
   local _port
   local _path
   local _query
   local _fragment

   local url

   url="https://git@www.mulle-kybernetik.com:666/weblog/article.html?foo=2#17"
   if ! __url_parse "${url}"
   then
      fail "could not parse URL \"${url}\""
   fi

   expect "_scheme"   "${_scheme}"   "https"
   expect "_userinfo" "${_userinfo}" "git"
   expect "_host"     "${_host}"     "www.mulle-kybernetik.com"
   expect "_port"     "${_port}"     "666"
   expect "_path"     "${_path}"     "/weblog/article.html"
   expect "_query"    "${_query}"    "foo=2"
   expect "_fragment" "${_fragment}" "17"
}


test_url2()
{
   local _scheme
   local _userinfo
   local _host
   local _port
   local _path
   local _query
   local _fragment

   local url

   url="git@foo.gitolite.com:repo.git"
   if ! __url_parse "${url}"
   then
      fail "could not parse URL \"${url}\""
   fi

   expect "_scheme"   "${_scheme}" ""
   expect "_userinfo" "${_userinfo}" "git"
   expect "_host"     "${_host}" "foo.gitolite.com"
   expect "_port"     "${_port}" ""
   expect "_path"     "${_path}" "repo.git"
   expect "_query"    "${_query}" ""
   expect "_fragment" "${_fragment}" ""
}


test_url3()
{
   local _scheme
   local _userinfo
   local _host
   local _port
   local _path
   local _query
   local _fragment

   local url

   url="file:///tmp/repositories/b"
   if ! __url_parse "${url}"
   then
      fail "could not parse URL \"${url}\""
   fi

   expect "_scheme"   "${_scheme}" "file"
   expect "_userinfo" "${_userinfo}" ""
   expect "_host"     "${_host}" ""
   expect "_port"     "${_port}" ""
   expect "_path"     "${_path}" "/tmp/repositories/b"
   expect "_query"    "${_query}" ""
   expect "_fragment" "${_fragment}" ""
}


test_url4()
{
   local _scheme
   local _userinfo
   local _host
   local _port
   local _path
   local _query
   local _fragment

   local url

   url="file:///tmp/repositories/c"
   if ! r_url_get_path "${url}"
   then
      fail "could not parse URL \"${url}\""
   fi

   expect "path" "${RVAL}" "/tmp/repositories/c"
}



test_url5()
{
   local _scheme
   local _userinfo
   local _host
   local _port
   local _path
   local _query
   local _fragment

   local url

   url="/name"
   if ! r_url_get_path "${url}"
   then
      fail "could not parse URL \"${url}\""
   fi

   expect "path" "${RVAL}" "/name"
}


test_url6()
{
   local _scheme
   local _userinfo
   local _host
   local _port
   local _path
   local _query
   local _fragment

   local url

   url="https://a.com/b.git"
   if ! __url_parse "${url}"
   then
      fail "could not parse URL \"${url}\""
   fi

   expect "_scheme"   "${_scheme}"   "https"
   expect "_userinfo" "${_userinfo}" ""
   expect "_host"     "${_host}"     "a.com"
   expect "_port"     "${_port}"     ""
   expect "_path"     "${_path}"     "/b.git"
   expect "_query"    "${_query}"    ""
   expect "_fragment" "${_fragment}" ""
}


main()
{
   _options_mini_main "$@" && set -x

   test_url1
   test_url2
   test_url3
   test_url4
   test_url5
   test_url6

   log_info "----- ALL PASSED -----"
}


main "$@"

