## Developer Guide

To create a new mulle-bashfunctions script say:

``` sh
mulle-bashfunctions new my-script > my-script.sh
chmod +x my-script.sh
```

Use **mulle-bashfunctions** also for discovery and documentation of the
available functions. Lets say you want to produce identifiers
for abitrary strings. You can use `apropos` to discover functionality:

``` sh
mulle-bashfunctions apropos identifier
```

Once you have found a function of interest, you can checkout its description
with:


``` sh
mulle-bashfunctions man r_smart_downcase_identifier
```
and try it out with `eval` for functions printing to standard output,
or `r-eval`, for functions that return values in the `RVAL` global variable
(these functionss are prefixed with `r_`):


``` sh
$ mulle-bashfunctions r-eval r_smart_downcase_identifier MyScript
my_script
```

Finally say

```sh
mulle-bashfunction embed < my-script.sh > my.sh
```

to create a standalone script. This script will run with `#! /bin/sh` and does
not need a mulle-bashfunctions installation.


### Libraries

Your script running under `#! /usr/bin/env mulle-bash` will have
`mulle-bashfunction.sh` preloaded. So you have access to a basic selection
of libraries, namely:


| Name                                        | Descriptions                                        |
|---------------------------------------------|-----------------------------------------------------|
| [compatibility](src/mulle-compatibility.sh) | abstraction of zsh and bash differences             |
| [logging](src/mulle-logging.sh)             | log support with colorization, zero cost if unused  |
| [exekutor](src/mulle-exekutor.sh)           | run external commands with logging and "dry-run"    |
| [file](src/mulle-file.sh)                   | functions to manage files, directories, symlinks    |
| [options](src/mulle-options.sh)             | default handling of command line options and trace support |
| [path](src/mulle-path.sh)                   | functions dealing with file paths                   |
| [string](src/mulle-string.sh)               | a multitude of string functions                     |


Use `include "<name>"` to get access to the functions not included in
`mulle-bashfunctions.sh` namely:

| Name                              | Descriptions                                                    |
|-----------------------------------|-----------------------------------------------------------------|
| [array](src/mulle-array.sh)       | maintain arrays as a string separated by linefeeds              |
| [case](src/mulle-case.sh)         | perform camelCase conversions                                   |
| [etc](src/mulle-etc.sh)           | maintain a writable `etc` folder, shadowed by read-only `share` |
| [parallel](src/mulle-parallel.sh) | execute parallel processes without swamping the machine         |
| [url](src/mulle-url.sh)           | URL parser                                                      |
| [version](src/mulle-version.sh)   | semver version management major.minor.version                   |

